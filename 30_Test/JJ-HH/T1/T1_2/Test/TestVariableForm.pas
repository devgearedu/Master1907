unit TestVariableForm;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Vcl.Dialogs, Winapi.Windows, VariableForm, System.SysUtils,
  Vcl.Graphics, System.Variants, Winapi.Messages, Vcl.StdCtrls, Vcl.Controls, Vcl.Forms,
  System.Classes;

type
  // Test methods for class TfrmVariable

  TestTfrmVariable = class(TTestCase)
  strict private
    FfrmVariable: TfrmVariable;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestAddNum;
    procedure TestSubNum;
    procedure TestAddAndSubNum;
  end;

implementation

procedure TestTfrmVariable.SetUp;
begin
  FfrmVariable := TfrmVariable.Create(nil);
end;

procedure TestTfrmVariable.TearDown;
begin
  FfrmVariable.Free;
  FfrmVariable := nil;
end;

procedure TestTfrmVariable.TestAddNum;
var
  ReturnValue: Integer;
begin
  FfrmVariable.InitData;

  ReturnValue := FfrmVariable.AddNum(2);
  CheckEquals(ReturnValue, 2, '0 + 2 = 2');

  ReturnValue := FfrmVariable.AddNum(3);
  CheckEquals(ReturnValue, 5, '2 + 3 = 5');
end;

procedure TestTfrmVariable.TestSubNum;
var
  ReturnValue: Integer;
begin
  FfrmVariable.InitData;

  ReturnValue := FfrmVariable.SubNum(3);
  CheckEquals(ReturnValue, -3, '0 - 3 = -3');

  ReturnValue := FfrmVariable.SubNum(4);
  CheckEquals(ReturnValue, -7, '-3 - 4 = -7');
end;

procedure TestTfrmVariable.TestAddAndSubNum;
var
  ReturnValue: Integer;
begin
  FfrmVariable.InitData;

  ReturnValue := FfrmVariable.AddNum(2);
  CheckEquals(ReturnValue, 2, '0 + 2 = 2');

  ReturnValue := FfrmVariable.AddNum(3);
  CheckEquals(ReturnValue, 5, '2 + 3 = 5');

  ReturnValue := FfrmVariable.SubNum(1);
  CheckEquals(ReturnValue, 4, '5 - 1 = 4');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmVariable.Suite);
end.

