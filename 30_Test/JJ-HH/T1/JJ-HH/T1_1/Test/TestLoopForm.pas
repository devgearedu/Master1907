unit TestLoopForm;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Vcl.Dialogs, Winapi.Windows, System.SysUtils, LoopForm, Vcl.Graphics,
  System.Variants, Winapi.Messages, Vcl.StdCtrls, Vcl.Controls, Vcl.Forms,
  System.Classes;

type
  // Test methods for class TForm3

  TestTfrmLoop = class(TTestCase)
  strict private
    FfrmLoop: TfrmLoop;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestCalcOddNumCount;
    procedure TestCalcMul3NumSum;
  end;

implementation

procedure TestTfrmLoop.SetUp;
begin
  FfrmLoop := TfrmLoop.Create(nil);
end;

procedure TestTfrmLoop.TearDown;
begin
  FfrmLoop.Free;
  FfrmLoop := nil;
end;

procedure TestTfrmLoop.TestCalcOddNumCount;
var
  ReturnValue: Integer;
begin
  ReturnValue := FfrmLoop.CalcOddNumCount(2, 5);
  CheckEquals(ReturnValue, 2, '3, 5');

  ReturnValue := FfrmLoop.CalcOddNumCount(1, 100);
  CheckEquals(ReturnValue, 50, 'Odd count : 1 to 100');

  ReturnValue := FfrmLoop.CalcOddNumCount(23, 231);
  CheckEquals(ReturnValue, 105, 'Odd count : 23 to 231');
end;

procedure TestTfrmLoop.TestCalcMul3NumSum;
var
  ReturnValue: Integer;
begin
  ReturnValue := FfrmLoop.CalcMul3NumSum(1, 7);
  CheckEquals(ReturnValue, 9, '3, 6');

  ReturnValue := FfrmLoop.CalcMul3NumSum(4, 87);
  CheckEquals(ReturnValue, 1302, 'Mul3 sum : 4 to 87');

  ReturnValue := FfrmLoop.CalcMul3NumSum(1, 500);
  CheckEquals(ReturnValue, 41583, 'Mul3 sum : 1 to 500');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmLoop.Suite);
end.

